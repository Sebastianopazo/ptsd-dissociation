#############################################################################
## Title: Dissociation and PSTD
## Original script by Paula Errazuriz (2016/04 - 2018/04). Worked with Paula
##  Cortes from CIGIDEN. Received statistical help from Alejandro, P Cumsille
##  and E Kromuller
## Modified script by Rubén Díaz
## Date of creation: 20181212
## Last modified: 20181217
## Data by Rodrigo Figueroa.
################################################################################
#### 0 NOTES ####
## Project structure
# This R script is thought to be located within an RStudio project with the
#   following folder structure:
#   - assets: Containing all the data and information about the project.
#   - output: Folder where the output from the script (plots and tables) will be
#           stored.
#   - raw_data: Containing the raw data base.
## Data
# Data was sent to RDiaz by PErrazuriz on 20181211 as a zip file "BB.DD.PFA.zip"
#   containing the database "1808131054_PAP" in xlsx, dat, sav, csv, and dta
#   file formats.
# GNU PSPP was used to extract the data dictionary from "1808131054_PAP.sav".
# LibreOffice Calc was used to prepare "1808131054_PAP.xlsx" as follows:
#   - Substitute"#NULL!" and " " (empty cell) with NA
#   - Recode values from "t0_provider" to preserve confidentiality of subjects.
#       Names of providers were replaced by numeric codes.
#   - Export data to CSV
#### 1 CODE BOOK ####
### Variables of interest (selected for theoretical reasons)
## Numeric variables
# t0_code (previously Nreclutado) col 1
# t0_age (previously Edad) - col 4
# t0_years_educ (previously CIDI_A8_basal): years of education - col 38
# t0_bdi (previously BDI_t0): Depression t0 (symptoms last 7 days) - col 16
# t1_bdi_tot (previously BDI_t1): Depression t1 (symptoms last 7 days) - col 17
# t0_pcl_tot (previously PCL_t0): PTSD score t0 (symptoms last month;
#   inespecific, not realated to 1 event) - col 18
# t1_pcl_tot (previously PCL_t1): PTSD score t1 (symptoms last month;
#   inespecific, not realated to 1 event) - col 19
# t0_pdeq (previously PDEQ_t0): dissociation during last traumatic event - col 21
# t0_pdi (previously PDI_t0): peritraumatic distress during the last traumatic event col 22
# t0_tq (previously TQ_t0): traumatic load (number of traumatic events) - col 23
# t0_mspss (previously MSPSS_t0): percived social support - col 20
## Factor variables
# t0_sex (previously Sexo*): sex - col 5
# t0_trauma_type (previously tipo_trauma*): trauma type - col 6
# t0_tx (previously rama*): intervention (PAP; Psicoeducation) - col 8
# t1_dx_tept (previously CIDI_K_t1*): presence of PTSD at t1? (TEPT- TEPT+) - col 15
#### 2 INSTALL AND CALL PACKAGES ####
## Install packages to work on this project
#install.packages("rprojroot")
#install.packages("psych")
#install.packages("MASS")
#install.packages("Matrix")
#install.packages("mvtnorm")
#install.packages("sandwich")
#install.packages("chron")
#install.packages("Rcpp")
#install.packages("stringi")
#install.packages("data.table")
#install.packages("mediation")
#install.packages("polycor")
## Call last the packages that will need most to deal with "masking"
library(rprojroot)
library(psych)
library(polycor)
library(MASS)
#library(Matrix)
#library(mvtnorm)
#library(sandwich)
#library(chron)
#library(Rcpp)
#library(stringi)
#library(data.table)
library(mediation)
## Custom functions
# Function to print numeric results (2 digit)
printNum <- function(x, digits = 2){
formatC(x, digits = digits, format = "f")
}
# Function to print p values (3 digits)
printP <- function(x){
sub("0.",".", format.pval(x, eps = .01, digits = 2))
}
# Function to print statistics for descriptive tables
descTab <- function(x){
data.frame(Mean = printNum(mean(x, na.rm = T), digits = 1),
SD = printNum(sd(x, na.rm = T), digits = 1))}
descTabFac <- function(x, group = NULL){
if (is.null(group)) {
tab1 <- table(x)
tab2 <- printNum(100*prop.table(tab1), digits = 1)
d <- cbind(tab1, tab2)
return(d)
}
tab1 <- table(x, group)
tab2 <- printNum(100*prop.table(tab1, margin  = 2), digits = 1)
d <- cbind(tab1, tab2)
d <- (d[, c(1, 3, 2, 4)])
return( rbind(c(rep(NA, 4), printP(chisq.test(x, group, simulate.p.value = T,
B = 10000)$'p.value')),
cbind(d, "p-value" = NA)))
}
# Function to print baseline descriptive statistics
descTable <- function(data = mydata){
list(
wholesample = list(n = nrow(data),
"Age (years)" = descTab(data$t0_age),
"Education (years)" = descTab(data$t0_years_educ),
"Post-traumatic stress symptoms" = descTab(data$t0_pcl_tot),
"Depressive symptoms" = descTab(data$t0_bdi),
"Traumatic Load" = descTab(data$t0_tq),
"Perceived social support" = descTab(data$t0_mspss),
Gender = descTabFac(data$t0_sex),
"Civil status" = descTabFac(data$t0_civil_status),
"Type of trauma" = descTabFac(data$t0_trauma_type)
),
byGroup = list(n = table(data$t0_tx),
"numeric" = rbind(
"Age (years)" =
data.frame(lapply(c("PE", "PFA"),
function(x){with(data[data$t0_tx == x,],
(descTab(t0_age)))}),
"p-value" = printP(t.test(data$t0_age ~
data$t0_tx)$'p.value')),
"Education (years)" =
data.frame(lapply(c("PE", "PFA"),
function(x){with(data[data$t0_tx == x,],
(descTab(t0_years_educ)))}),
"p-value" = printP(t.test(data$t0_years_educ ~
data$t0_tx)$'p.value')),
"Post-traumatic stress symptoms" =
data.frame(lapply(c("PE", "PFA"),
function(x){with(data[data$t0_tx == x,],
(descTab(t0_pcl_tot)))}),
"p-value" = printP(t.test(data$t0_pcl_tot ~
data$t0_tx)$'p.value')),
"Depressive symptoms" =
data.frame(lapply(c("PE", "PFA"),
function(x){with(data[data$t0_tx == x,],
(descTab(t0_bdi)))}),
"p-value" = printP(t.test(data$t0_bdi ~
data$t0_tx)$'p.value')),
"Traumatic Load" =
data.frame(lapply(c("PE", "PFA"),
function(x){with(data[data$t0_tx == x,],
(descTab(t0_tq)))}),
"p-value" = printP(t.test(data$t0_tq ~
data$t0_tx)$'p.value')),
"Perceived social support" =
data.frame(lapply(c("PE", "PFA"),
function(x){with(data[data$t0_tx == x,],
(descTab(t0_mspss)))}),
"p-value" = printP(t.test(data$t0_mspss ~
data$t0_tx)$'p.value'))),
"factor" = list(Gender = descTabFac(data$t0_sex, data$t0_tx),
"Civil status" = descTabFac(data$t0_civil_status,
data$t0_tx),
"Type of trauma" = descTabFac(data$t0_trauma_type,
data$t0_tx))))
}
# Function to detect and replace univariate outliers
detectOutlier <- function(var, cutoffPoint = 3.29){
ztemp <- scale(var, center = T, scale  = T) #Transform variable to Z score
indOut <- which(abs(ztemp) > cutoffPoint) # Index of Outliers
indNoOut <- which(abs(ztemp) <= cutoffPoint) # Index of Not Outliers
results = list("Index of outliers" = indOut, "n outliers" = length(indOut))
# if outliers are detected, replace values with highest (or lowest) value
#   before outlier
if (length(indOut) > 0 ) {
maxD <- max(var[indNoOut])
minD <- min(var[indNoOut])
repOut <- var
repOut[which(repOut > maxD)] <- maxD + 1
repOut[which(repOut < minD)] <- minD - 1
results$'Variable without outliers' = repOut
}
return(results)
}
## Set random seed (for reproducibility purposes)
set.seed(565119902)
setwd("/Users/Paula/Dropbox/1 PROYECTOS_INVESTIGACION/desastres_naturales/paper factores riesgo PTSD Rodrigo")
# Open Data :)
mydata <- read.csv("161103 pacientes_excell_para_r.csv",
header = TRUE, sep = ";")
# Open Data :)
mydata <- read.csv("161103 pacientes_excell_para_r.csv",
header = TRUE, sep = ";")
#### 3 READ DATA (run always) ####
## Set working directory
#setwd(find_rstudio_root_file())
setwd("/Users/Paula/Dropbox/1 PROYECTOS_INVESTIGACION/desastres_naturales/paper factores riesgo PTSD Rodrigo/2_Anxiety, Stress & Coping")
## Read data
mydata <- read.csv("raw_data/data.csv", header = TRUE, sep = ",")
setwd("/Users/Paula/Dropbox/1 PROYECTOS_INVESTIGACION/desastres_naturales/paper factores riesgo PTSD Rodrigo/2_Anxiety, Stress & Coping")
## Read data
mydata <- read.csv("raw_data/data.csv", header = TRUE, sep = ",")
